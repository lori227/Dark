// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "EnumMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace KFMsg {
}  // namespace KFMsg
namespace protobuf_EnumMessage_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[21];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "EnumMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021EnumMessage.proto\022\005KFMsg*~\n\017ConstDefin"
      "eEnum\022\017\n\013UnknowConst\020\000\022\022\n\014InfiniteStep\020\237"
      "\215\006\022\022\n\014InfiniteTurn\020\237\215\006\022\021\n\014InfiniteBuff\020\220"
      "N\022\014\n\010AreaCamp\020\001\022\r\n\tAreaRealm\020\002\032\002\020\001*5\n\010Ca"
      "mpEnum\022\016\n\nUnknowCamp\020\000\022\013\n\007RedCamp\020\001\022\014\n\010B"
      "lueCamp\020\002*[\n\013DivisorEnum\022\021\n\rUnknowDiviso"
      "r\020\000\022\021\n\rDivisorOfRace\020\001\022\021\n\rDivisorOfMove\020"
      "\002\022\023\n\017DivisorOfWeapon\020\003*;\n\014HeroLockEnum\022\n"
      "\n\006NoLock\020\000\022\020\n\014HeroListLock\020\001\022\r\n\tCountLoc"
      "k\020\002*B\n\016HeroRemoveEnum\022\021\n\rRemoveUnknown\020\000"
      "\022\r\n\tDismissal\020e\022\016\n\nRetirement\020f*\224\002\n\tBuil"
      "dEnum\022\020\n\014InvalidBuild\020\000\022\r\n\010HeroList\020\310\001\022\r"
      "\n\010HeroTeam\020\311\001\022\016\n\tMainBuild\020\312\001\022\021\n\014Recruit"
      "Build\020\313\001\022\020\n\013ClinicBuild\020\314\001\022\017\n\nTrainBuild"
      "\020\315\001\022\017\n\nOperaBuild\020\316\001\022\020\n\013SmithyBuild\020\317\001\022\016"
      "\n\tShopBuild\020\320\001\022\021\n\014InheritBuild\020\321\001\022\022\n\rCem"
      "eteryBuild\020\322\001\022\017\n\nOuterBuild\020\323\001\022\023\n\016Wareho"
      "useBuild\020\324\001\022\021\n\014GranaryBuild\020\325\001*`\n\nRecord"
      "Enum\022\021\n\rInvalidRecord\020\000\022\016\n\nCampRecord\020\001\022"
      "\017\n\013DailyRecord\020\002\022\016\n\nDeadRecord\020\003\022\016\n\nLife"
      "Record\020\004*+\n\rLifeEventEnum\022\014\n\010HeroBorn\020\000\022"
      "\014\n\010HeroDead\020\001*\242\001\n\022PlayerStatusEnumEx\022\020\n\014"
      "UnknowStatus\020\000\022\020\n\014OnlineStatus\020\001\022\021\n\rOffl"
      "ineStatus\020\002\022\021\n\rExploreStatus\020\003\022\r\n\tPVESta"
      "tus\020\004\022\r\n\tPVPStatus\020\005\022\016\n\nTownStatus\020\006\022\024\n\020"
      "DropSelectStatus\020d*c\n\014NoticeEnumEx\022\020\n\014Un"
      "knowNotice\020\000\022\024\n\020NoticeCampRecord\020d\022\025\n\021No"
      "ticeDailyRecord\020e\022\024\n\020NoticeDeadRecord\020f*"
      ">\n\nExpireEnum\022\021\n\rInvalidExpire\020\000\022\016\n\nTime"
      "Expire\020\001\022\r\n\tNumExpire\020\002*;\n\017BalanceShowEn"
      "um\022\016\n\nUnknowShow\020\000\022\013\n\007Explore\020\001\022\013\n\007Balan"
      "ce\020\002*\?\n\014ItemAutoEnum\022\017\n\013AutoInvalid\020\000\022\r\n"
      "\tAutoStore\020\001\022\017\n\013AutoDestory\020\002*\202\002\n\022Initia"
      "lProcessEnum\022\022\n\016ProcessInvalid\020\000\022\r\n\tProc"
      "essCG\020\001\022\016\n\nProcessPVE\020\002\022\022\n\016ProcessExplor"
      "e\020\003\022\022\n\016ProcessChapter\020\004\022\017\n\013ProcessTask\020\005"
      "\022\020\n\014ProcessScene\020\006\022\016\n\nUIDialogue\020\007\022\022\n\016Bu"
      "bbleDialogue\020\010\022\023\n\017ProcessSequence\020\t\022\023\n\017C"
      "hapterAndStory\020\n\022\020\n\014ProcessStory\020\013\022\016\n\nCr"
      "eateRole\020\014*s\n\016RealmEnterEnum\022\020\n\014EnterInv"
      "alid\020\000\022\020\n\014EnterChapter\020\001\022\016\n\nEnterLogin\020\002"
      "\022\r\n\tEnterTown\020\003\022\r\n\tEnterJump\020\004\022\017\n\013EnterE"
      "xtend\020\005*;\n\017ExtendLevelEnum\022\026\n\022ExtendLeve"
      "lInvalid\020\000\022\020\n\013ExtendLevel\020\220N*c\n\013BalanceE"
      "num\022\021\n\rUnknowBalance\020\000\022\013\n\007Victory\020\001\022\n\n\006F"
      "ailed\020\002\022\010\n\004Flee\020\003\022\010\n\004Town\020\004\022\007\n\003Ace\020\005\022\013\n\007"
      "Chapter\020d*=\n\010JumpEnum\022\017\n\013JumpInvalid\020\000\022\t"
      "\n\005Leave\020\001\022\t\n\005Enter\020\002\022\n\n\006Finish\020\003*G\n\rReal"
      "mTimeEnum\022\017\n\013TimeInvalid\020\000\022\013\n\007Morning\020\001\022"
      "\r\n\tAfternoon\020\002\022\t\n\005Night\020\003*z\n\014FunctionEnu"
      "m\022\023\n\017FunctionInvalid\020\000\022\017\n\013OnekeyEquip\020\001\022"
      "\016\n\nDarkCorner\020e\022\022\n\016NecklaceEmbryo\020f\022\020\n\014P"
      "rogressText\020g\022\016\n\nDescButton\020h*9\n\016InnerWo"
      "rldEnum\022\025\n\021InnerWorldInvalid\020\000\022\020\n\014Namele"
      "ssMist\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EnumMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_EnumMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* ConstDefineEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[0];
}
bool ConstDefineEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 10000:
    case 99999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CampEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[1];
}
bool CampEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DivisorEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[2];
}
bool DivisorEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HeroLockEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[3];
}
bool HeroLockEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HeroRemoveEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[4];
}
bool HeroRemoveEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 101:
    case 102:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BuildEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[5];
}
bool BuildEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RecordEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[6];
}
bool RecordEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LifeEventEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[7];
}
bool LifeEventEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerStatusEnumEx_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[8];
}
bool PlayerStatusEnumEx_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NoticeEnumEx_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[9];
}
bool NoticeEnumEx_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExpireEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[10];
}
bool ExpireEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BalanceShowEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[11];
}
bool BalanceShowEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ItemAutoEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[12];
}
bool ItemAutoEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InitialProcessEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[13];
}
bool InitialProcessEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RealmEnterEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[14];
}
bool RealmEnterEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExtendLevelEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[15];
}
bool ExtendLevelEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BalanceEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[16];
}
bool BalanceEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* JumpEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[17];
}
bool JumpEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RealmTimeEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[18];
}
bool RealmTimeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FunctionEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[19];
}
bool FunctionEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 101:
    case 102:
    case 103:
    case 104:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InnerWorldEnum_descriptor() {
  protobuf_EnumMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_EnumMessage_2eproto::file_level_enum_descriptors[20];
}
bool InnerWorldEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
